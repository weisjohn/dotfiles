#!/bin/bash

# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		MAGENTA=$(tput setaf 9)
		ORANGE=$(tput setaf 172)
		YELLOW=$(tput setaf 222)
		GREEN=$(tput setaf 6)
		BLUE=$(tput setaf 12)
		PURPLE=$(tput setaf 141)
		WHITE=$(tput setaf 255)
	else
		MAGENTA=$(tput setaf 5)
		ORANGE=$(tput setaf 4)
		YELLOW=$(tput setaf 3)
		GREEN=$(tput setaf 2)
		BLUE=$(tput setaf 6)
		PURPLE=$(tput setaf 1)
		WHITE=$(tput setaf 7)
	fi
	BOLD=$(tput bold)
	BLINK=$(tput blink)
	RESET=$(tput sgr0)
else
	MAGENTA="\033[1;31m"
	ORANGE="\033[1;33m"
	YELLOW="\033[1;32m"
	GREEN="\033[1;32m"
	BLUE="\033[1;34m"
	PURPLE="\033[1;35m"
	WHITE="\033[1;37m"
	BOLD=""
	BLINK="\033[5;33m"
	RESET="\033[m"
fi

export MAGENTA
export ORANGE
export YELLOW
export GREEN
export BLUE
export PURPLE
export WHITE
export BOLD
export BLINK
export RESET

function parse_git_dirty() {
	[[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working tree clean" ]] && echo "*"
}

function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

function k8s_context() {
	kubectl config current-context
}

# rainbow - red orange yellow green blue purple
if [[ $(id -u) -eq 0 ]]; then
  PS1="\[${BLINK}${MAGENTA}\]\u\e[0m \[$WHITE\]on \[$ORANGE\]\h \[$WHITE\]at \[$YELLOW\]\D{%r} \[$WHITE\]in \[$GREEN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$BLUE\]\$(parse_git_branch)\[$WHITE\] to \[$PURPLE\]\$(k8s_context)\[$WHITE\]\nλ \[$RESET\]"
else
  PS1="\[${MAGENTA}\]\u\e[0m \[$WHITE\]on \[$ORANGE\]\h \[$WHITE\]at \[$YELLOW\]\D{%r} \[$WHITE\]in \[$GREEN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$BLUE\]\$(parse_git_branch)\[$WHITE\] to \[$PURPLE\]\$(k8s_context)\[$WHITE\]\nλ \[$RESET\]"
fi

# allow new lines after command executions
shopt -s promptvars
PS1='$(printf "%$((COLUMNS))s\r")'$PS1

